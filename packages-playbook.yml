---
- name: Install packages and services
  hosts: all
  vars:
    ansible_python_interpreter: /usr/bin/python3
  become: true

  tasks:

    - name: Load variables
      include_vars:
        file: jira.yml
      tags: variables

    - name: Import PostgreSQL GPG key
      apt_key:
        keyserver: keyserver.ubuntu.com
        id: 7FCC7D46ACCC4CF8
        state: present

    - name: Add PostgreSQL repo
      become: yes
      apt_repository:
        repo: "deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main"
        state: present
      register: apt_repository_result

    - name: Import GPG key for PostgreSQL repo
      become: yes
      apt_key:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state: present
      when: apt_repository_result.changed

    - name: apt update
      become: yes
      apt:
        update_cache: yes

    - name: Install PostgreSQL {{ psql_version }} and dependencies
      apt:
        name:
          - postgresql-{{ psql_version }}
          #- postgresql-client-{{ psql_version }}
          #- postgresql-contrib-{{ psql_version }}
        state: present
      no_log: true

    - name: Update datra_directory in /etc/postgresql/12/main/postgresql.conf
      ansible.builtin.lineinfile:
        path: /etc/postgresql/12/main/postgresql.conf
        regexp: '^data_directory = .*'
        line: "data_directory = '/atlassian/database/data/postgresql/12/main'"
      become: yes

    - name: Check if /atlassian/database/data exists
      stat:
        path: /atlassian/database/data
      register: database_stat

    - name: Create /atlassian/database/data if it doesn't exist
      command: mkdir -p /atlassian/database/data/
      when: not database_stat.stat.exists

    - name: Copy PostgreSQL data directory content in /atlassian/database/data
      command: sudo cp -r /var/lib/postgresql /atlassian/database/data

    - name: Update ownership of /atlassian/database/data/postgresql
      command: sudo chown -R postgres:postgres /atlassian/database/

    - name: Start PostgreSQL service
      service:
        name: postgresql
        enabled: yes
        state: started

#    - name: Install SSH
#      apt:
#        name: openssh-server
#        state: present
#      no_log: true

 #   - name: Start SSH service
 #     service:
 #       name: ssh
 #       enabled: yes
 #       state: started

    - name: Install Apache2
      package:
        name: apache2  # Pour les distributions basées sur Debian (comme Ubuntu)
        state: present
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'
      no_log: true

    - name: Start Apache2 service
      service:
        name: apache2
        enabled: yes
        state: started

    - name: Check if java directory already exists
      stat:
        path: "/atlassian/java"
      register: java_directory

    - name: Créer le répertoire s'il n'existe pas
      command: mkdir -p /atlassian/java
      when: not java_directory.stat.exists

    - name: Récupérer les liens téléchargeables
      shell: "curl -s https://jdk.java.net/archive/ | grep -oP 'https?://[^\\s]+\\.tar\\.gz'"
      register: tar_links
      no_log: true

    - name: Récupérer le premier nombre et ajouter 'jdk' au début
      set_fact:
        jdk_version: "jdk{{ java_version | regex_replace('^([0-9]+)\\..*', '\\1') }}"

    - name: Filtrer les liens de {{ jdk_version }}
      set_fact:
        jdk11_links: "{{ tar_links.stdout_lines | select('search', jdk_version) | select('search', 'linux') | select('search', java_version) | list }}"

    - name: Obtenir le lien le plus récent
      set_fact:
        latest_link: "{{ jdk11_links | sort | last }}"

    - name: Télécharger le fichier .tar.gz de la version {{ java_version }}
      get_url:
        url: "{{ latest_link }}"
        dest: "/atlassian/java/{{ latest_link | basename }}"

    - name: Untar Java archive
      command: tar -xzvf /atlassian/java/openjdk-{{ java_version }}_linux-x64_bin.tar.gz -C /atlassian/java
      no_log: true

    - name: Create current symlink
      command: ln -s /atlassian/java/jdk-{{ java_version }} /atlassian/java/current
